{"version":3,"sources":["components/Task.module.scss","components/InputTask.module.scss","App.module.scss","components/Message.module.scss","components/Panel.module.scss","components/Tabs.module.scss","config/globalAxios.js","components/Message.jsx","components/InputTask.jsx","components/Tabs.jsx","components/Task.jsx","components/Panel.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["module","exports","globalAxios","axios","create","baseURL","process","headers","Authorization","responseType","errorHandling","error","response","alert","status","statusText","Message","className","styles","message_area","InputTask","props","tasks","setTasks","useState","taskBody","setTaskBody","addTask","a","post","body","data","task","message","console","log","input_group","form_control","type","value","onChange","e","target","input_group_append","disabled","onClick","Tabs","showCompleted","setShowCompleted","list","list_item","selected","role","Task","isHidden","isCompleted","toggleCompletedStatus","id","updateTask","find","taskData","patch","updateTasks","map","deleteTask","delete","filter","hidden","task_body","task_delete","icon","faTrashAlt","Panel","panel","App","fetchInitialTasks","get","useEffect","tab_component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9fa61473.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"task\":\"Task_task__1SjHh\",\"hidden\":\"Task_hidden__3ZQ1I\",\"task_body\":\"Task_task_body__3T0SH\",\"message_box\":\"Task_message_box__10V1c\",\"message_dead\":\"Task_message_dead__3ZDdi\",\"task_delete\":\"Task_task_delete__1B3zD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input_group\":\"InputTask_input_group__3LauB\",\"form_control\":\"InputTask_form_control__1XkUE\",\"input_group_append\":\"InputTask_input_group_append__2gP94\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab_component\":\"App_tab_component__E8kzW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message_area\":\"Message_message_area__2AOhe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"panel\":\"Panel_panel__16MqY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"Tabs_list__2ZG80\",\"list_item\":\"Tabs_list_item__rtXXd\",\"selected\":\"Tabs_selected__B2UID\"};","import axios from 'axios';\n\nconst globalAxios = axios.create({\n  baseURL: process.env.REACT_APP_BACKEND_BASE_URL,\n  headers: {\n    'Content-type': 'application/json',\n    Authorization: `Bearer ${process.env.REACT_APP_TOKEN}`,\n  },\n  responseType: 'json',\n});\n\nconst errorHandling = (error) => {\n  if (error.response) {\n    alert(`${error.response.status}: ${error.response.statusText}`);\n  } else {\n    alert('通信に失敗しました。インターネットの接続をご確認下さい。');\n  }\n};\n\nexport { globalAxios, errorHandling };\n","import styles from './Message.module.scss';\n\nexport const Message = () => {\n  return <div className={styles.message_area}></div>;\n};\n","import { useState } from 'react';\nimport PropTypes from 'prop-types';\n\nimport styles from './InputTask.module.scss';\nimport { globalAxios, errorHandling } from '../config/globalAxios';\n\nexport const InputTask = (props) => {\n  const { tasks, setTasks } = props;\n  const [taskBody, setTaskBody] = useState('');\n\n  const addTask = async () => {\n    try {\n      const response = await globalAxios.post('/tasks', { body: taskBody });\n      const { task, message } = response.data;\n      console.log(message);\n      // ここがおかしい\n      setTasks([...tasks, task]);\n      setTaskBody('');\n    } catch (error) {\n      errorHandling(error);\n    }\n  };\n\n  return (\n    <div className={styles.input_group}>\n      <input\n        className={styles.form_control}\n        type=\"text\"\n        value={taskBody}\n        onChange={(e) => {\n          setTaskBody(e.target.value);\n        }}\n      />\n      <button\n        className={styles.input_group_append}\n        disabled={taskBody === ''}\n        onClick={() => {\n          addTask();\n        }}\n      >\n        登場\n      </button>\n    </div>\n  );\n};\n\nInputTask.propTypes = {\n  tasks: PropTypes.array,\n  setTasks: PropTypes.func,\n};\n","import styles from './Tabs.module.scss';\nimport PropTypes from 'prop-types';\n\nexport const Tabs = (props) => {\n  const { showCompleted, setShowCompleted } = props;\n\n  return (\n    <ul className={styles.list}>\n      <li\n        className={`${styles.list_item} ${!showCompleted && styles.selected}`}\n        onClick={() => setShowCompleted(false)}\n        role=\"tab\"\n      >\n        敵\n      </li>\n      <li\n        className={`${styles.list_item} ${showCompleted && styles.selected}`}\n        onClick={() => setShowCompleted(true)}\n        role=\"tab\"\n      >\n        KO\n      </li>\n    </ul>\n  );\n};\n\nTabs.propTypes = {\n  showCompleted: PropTypes.bool,\n  setShowCompleted: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons';\n\nimport styles from './Task.module.scss';\nimport { globalAxios, errorHandling } from '../config/globalAxios';\n\nexport const Task = (props) => {\n  const { task, showCompleted, tasks, setTasks } = props;\n  const isHidden = task.isCompleted !== showCompleted;\n\n  const toggleCompletedStatus = async (id) => {\n    try {\n      let updateTask = tasks.find((taskData) => taskData.id === id);\n      const response = await globalAxios.patch(`/tasks/${id}`, { isCompleted: !updateTask.isCompleted });\n      updateTask = response.data;\n\n      const updateTasks = tasks.map((taskData) => {\n        return taskData.id === id ? updateTask : taskData;\n      });\n      setTasks(updateTasks);\n    } catch (error) {\n      errorHandling(error);\n    }\n  };\n\n  const deleteTask = async (id) => {\n    try {\n      await globalAxios.delete(`/tasks/${id}`);\n      const updateTasks = tasks.filter((taskData) => taskData.id !== id);\n      setTasks(updateTasks);\n    } catch (error) {\n      errorHandling(error);\n    }\n  };\n\n  return (\n    <div className={`${styles.task} ${isHidden && styles.hidden}`}>\n      <div className={styles.task_body} onClick={() => toggleCompletedStatus(task.id)}>\n        {task.body}\n      </div>\n      <div className={styles.task_delete} onClick={() => deleteTask(task.id)}>\n        <FontAwesomeIcon icon={faTrashAlt} />\n      </div>\n    </div>\n  );\n};\n\nTask.propTypes = {\n  task: PropTypes.object,\n  tasks: PropTypes.array,\n  showCompleted: PropTypes.bool,\n  setTasks: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport styles from './Panel.module.scss';\n\nimport { Task } from './Task';\n\nexport const Panel = (props) => {\n  const { showCompleted, tasks, setTasks } = props;\n\n  return (\n    <div className={styles.panel} role=\"tabpanel\">\n      {tasks.map((task) => (\n        <Task key={task.id} task={task} tasks={tasks} showCompleted={showCompleted} setTasks={setTasks} />\n      ))}\n    </div>\n  );\n};\n\nPanel.propTypes = {\n  showCompleted: PropTypes.bool,\n  tasks: PropTypes.array,\n  setTasks: PropTypes.func,\n};\n","import { useState, useEffect } from 'react';\n\nimport styles from './App.module.scss';\nimport { globalAxios, errorHandling } from './config/globalAxios';\n\nimport { Message } from './components/Message';\nimport { InputTask } from './components/InputTask';\nimport { Tabs } from './components/Tabs';\nimport { Panel } from './components/Panel';\n\nconst App = () => {\n  const [tasks, setTasks] = useState([]);\n  const [showCompleted, setShowCompleted] = useState(false);\n\n  const fetchInitialTasks = async () => {\n    try {\n      const response = await globalAxios.get('/tasks');\n      setTasks(response.data);\n    } catch (error) {\n      errorHandling(error);\n    }\n  };\n\n  useEffect(() => {\n    fetchInitialTasks();\n  }, []);\n\n  return (\n    <main>\n      <h1>世紀末Todo伝説</h1>\n      <div className=\"todo-component\">\n        <Message></Message>\n        <InputTask tasks={tasks} setTasks={setTasks}></InputTask>\n        <div className={styles.tab_component}>\n          <Tabs showCompleted={showCompleted} setShowCompleted={setShowCompleted}></Tabs>\n          <Panel showCompleted={showCompleted} tasks={tasks} setTasks={setTasks}></Panel>\n        </div>\n      </div>\n    </main>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}